# yaml-language-server: $schema=https://raw.githubusercontent.com/budimanjojo/talhelper/master/pkg/config/schemas/talconfig.json
---
clusterName: kubernetes
talosVersion: "${talosVersion}"
kubernetesVersion: "${kubernetesVersion}"
endpoint: https://192.168.20.10:6443
additionalApiServerCertSans: &sans
  - "127.0.0.1"
  - "192.168.20.10"
additionalMachineCertSans: *sans
clusterPodNets: ["10.42.0.0/16"]
clusterSvcNets: ["10.43.0.0/16"]

# Disable built-in CNI to use Cilium
cniConfig:
  name: none
nodes:
  - hostname: "talos-01"
    ipAddress: "192.168.20.20"
    installDiskSelector:
      serial: "S4EVNF0M454702F"
    machineSpec:
      secureboot: false
    talosImageURL: factory.talos.dev/installer/2bd7f82d16768b9df60733a7081244c39a2bc30c3d765c8e077e664c9e654b8c
    schematic:
      customization:
        extraKernelArgs:
          - -init_on_alloc          # Less security, faster puter
          - -init_on_free           # Less security, faster puter
          - -selinux                # Less security, faster puter
          - apparmor=0              # Less security, faster puter
          - i915.enable_guc=3       # Kaby Lake CPU / iGPU
          - init_on_alloc=0         # Less security, faster puter
          - init_on_free=0          # Less security, faster puter
          - intel_iommu=on          # PCI Passthrough
          - iommu=pt                # PCI Passthrough
          - pcie_aspm=off           # Disable PCIe ASPM
          - mitigations=off         # Less security, faster puter
          - security=none           # Less security, faster puter
          - talos.auditd.disabled=1 # Less security, faster puter
        systemExtensions:
          officialExtensions:
            - siderolabs/i915 # Intel iGPU
            - siderolabs/intel-ucode # Intel iGPU
            - siderolabs/iscsi-tools # Longhorn
            - siderolabs/mei # Intel iGPU
            - siderolabs/nfsrahead # NFS Performance
            - siderolabs/util-linux-tools # Longhorn
    controlPlane: true
    userVolumes:
      - name: local-hostpath
        provisioning:
          diskSelector:
            match: disk.serial == "S4J4NX0R819227P"
          maxSize: 2TB
    networkInterfaces:
      - interface: eno1
        dhcp: true
        mtu: 1500
        vip:
          ip: "192.168.20.10"

# Global patches
patches:
  - |-
    machine:
      files:
        - op: create
          path: /etc/cri/conf.d/20-customization.part
          content: |-
            [plugins."io.containerd.cri.v1.images"]
              discard_unpacked_layers = false
            [plugins."io.containerd.cri.v1.runtime"]
              device_ownership_from_security_context = true
        - op: overwrite
          path: /etc/nfsmount.conf
          permissions: 0o644
          content: |
            [ NFSMount_Global_Options ]
            nfsvers=4.1
            hard=True
            nconnect=16
            noatime=True
            rsize=1048576
            wsize=1048576
      kubelet:
        defaultRuntimeSeccompProfileEnabled: true
        extraConfig:
          featureGates:
            ImageVolume: true
            ResourceHealthStatus: true
          serializeImagePulls: false
        nodeIP:
          validSubnets:
            - 192.168.20.0/24
      nodeLabels:
        intel.feature.node.kubernetes.io/gpu: "true"
      sysctls:
        fs.inotify.max_user_instances: "8192"      # Watchdog
        fs.inotify.max_user_watches: "1048576"     # Watchdog
        net.core.default_qdisc: fq                 # 10Gb/s
        net.core.rmem_max: "7500000"               # Cloudflared | QUIC
        net.core.wmem_max: "7500000"               # Cloudflared | QUIC
        net.ipv4.neigh.default.gc_thresh1: "4096"  # Prevent ARP cache overflows
        net.ipv4.neigh.default.gc_thresh2: "8192"  # Prevent ARP cache overflows
        net.ipv4.neigh.default.gc_thresh3: "16384" # Prevent ARP cache overflows
        net.ipv4.tcp_congestion_control: bbr       # 10Gb/s
        net.ipv4.tcp_fastopen: "3"                 # Send and accept data in the opening SYN packet
        net.ipv4.tcp_mtu_probing: "1"              # 10Gb/s | Jumbo frames
        net.ipv4.tcp_rmem: 4096 87380 33554432     # 10Gb/s
        net.ipv4.tcp_wmem: 4096 65536 33554432     # 10Gb/s
        net.ipv4.tcp_window_scaling: "1"           # 10Gb/s
        sunrpc.tcp_slot_table_entries: "128"       # 10Gb/s | NFS
        sunrpc.tcp_max_slot_table_entries: "128"   # 10Gb/s | NFS
        user.max_user_namespaces: "11255"          # User Namespaces

# Controller patches
controlPlane:
  patches:
    - |-
      cluster:
        allowSchedulingOnControlPlanes: true
        apiServer:
          extraArgs:
            # https://kubernetes.io/docs/tasks/extend-kubernetes/configure-aggregation-layer/
            enable-aggregator-routing: true
            feature-gates: ImageVolume=true,MutatingAdmissionPolicy=true,ResourceHealthStatus=true
            runtime-config: admissionregistration.k8s.io/v1beta1=true
          disablePodSecurityPolicy: true
        controllerManager:
          extraArgs:
            bind-address: 0.0.0.0
        coreDNS:
          disabled: true
        etcd:
          extraArgs:
            listen-metrics-urls: http://0.0.0.0:2381
          advertisedSubnets:
            - 192.168.20.0/24
        proxy:
          disabled: true
        scheduler:
          extraArgs:
            bind-address: 0.0.0.0

