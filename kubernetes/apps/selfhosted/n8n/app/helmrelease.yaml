---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: n8n
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  interval: 1h
  values:
    controllers:
      n8n:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/n8n-io/n8n
              tag: 1.118.1@sha256:cf74d4ebe7dca858c390ee317b9a4f554ea57f0444b2d760f6d69e4f18d5d312
            env:
              DB_SQLITE_VACUUM_ON_STARTUP: true
              DB_SQLITE_POOL_SIZE: 4
              EXECUTIONS_TIMEOUT: 600
              EXECUTIONS_DATA_MAX_AGE: 7
              EXECUTIONS_DATA_PRUNE_MAX_COUNT: 50000
              GENERIC_TIMEZONE: Europe/Oslo
              N8N_BLOCK_ENV_ACCESS_IN_NODE: true
              N8N_EDITOR_BASE_URL: "https://{{ .Release.Name }}.${SECRET_DOMAIN}"
              N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: false
              N8N_VERSION_NOTIFICATIONS_ENABLED: false
              N8N_HIRING_BANNER_ENABLED: false
              N8N_GIT_NODE_DISABLE_BARE_REPOS: true
              N8N_RUNNERS_ENABLED: true
              N8N_METRICS: true
              N8N_LOG_FORMAT: json
              N8N_PORT: &port 80
              N8N_PROTOCOL: https
              N8N_PROXY_HOPS: 1
              N8N_ENCRYPTION_KEY:
                valueFrom:
                  secretKeyRef:
                    name: n8n-secret
                    key: N8N_ENCRYPTION_KEY
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 500Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        ports:
          http:
            port: *port
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.${SECRET_DOMAIN}"
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
      api:
        hostnames:
          - "{{ .Release.Name }}-api.${SECRET_DOMAIN}"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - matches:
              - path:
                  value: /api
            backendRefs: [{}]
    persistence:
      data:
        existingClaim: "{{ .Release.Name }}"
        advancedMounts:
          n8n:
            app:
              - path: /home/node/.n8n
      cache:
        type: emptyDir
        globalMounts:
          - path: /home/node/.cache